type User {
    id: ID!
    firstName: String
    lastName: String
    email: String
    age: Int
    department: Department
    roles: [Role]
}

type Role {
    id: ID!
    name: String
}

input RoleInput {
    id: ID!
    name: String
}

input DepartmentInput {
    id: ID!
    name: String
}

input UserCreateInput {
    firstName: String
    lastName: String
    email: String
    age: Int
    department: DepartmentInput
    roles: [RoleInput]
}

type Department {
    id: ID!
    name: String
}

type DefaultUserPage {
    data: [User]
    totalElements: Int!
    totalPages: Int!
}

type Query {
    allUsers: [User]
    usersPage(page: Int, size: Int): DefaultUserPage
    allRoles: [Role]
    allDepartments: [Department]
}

type Mutation {
    createUser(user: UserCreateInput!): User
}